==7414== Helgrind, a thread error detector
==7414== Copyright (C) 2007-2013, and GNU GPL'd, by OpenWorks LLP et al.
==7414== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==7414== Command: ./project ../testcases/s5e50.in 10
==7414== 
==7414== ---Thread-Announcement------------------------------------------
==7414== 
==7414== Thread #1 is the program's root thread
==7414== 
==7414== ---Thread-Announcement------------------------------------------
==7414== 
==7414== Thread #4 was created
==7414==    at 0x53565EE: clone (clone.S:74)
==7414==    by 0x5058279: do_clone.constprop.3 (createthread.c:75)
==7414==    by 0x5059722: create_thread (createthread.c:245)
==7414==    by 0x5059722: pthread_create@@GLIBC_2.2.5 (pthread_create.c:606)
==7414==    by 0x4C2EEBD: pthread_create_WRK (hg_intercepts.c:270)
==7414==    by 0x4E48C56: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x5619110 by thread #1
==7414== Locks held: none
==7414==    at 0x4E4ACDF: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48D38: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous read of size 4 by thread #4
==7414== Locks held: none
==7414==    at 0x4E4AD3B: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E486E2: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x5619110 is 128 bytes inside a block of size 192 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E49482: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x56190D4 by thread #1
==7414== Locks held: none
==7414==    at 0x4E4ACE5: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48D38: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous read of size 4 by thread #4
==7414== Locks held: none
==7414==    at 0x4E4AD30: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E486E2: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x56190d4 is 68 bytes inside a block of size 192 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E49482: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ---Thread-Announcement------------------------------------------
==7414== 
==7414== Thread #2 was created
==7414==    at 0x53565EE: clone (clone.S:74)
==7414==    by 0x5058279: do_clone.constprop.3 (createthread.c:75)
==7414==    by 0x5059722: create_thread (createthread.c:245)
==7414==    by 0x5059722: pthread_create@@GLIBC_2.2.5 (pthread_create.c:606)
==7414==    by 0x4C2EEBD: pthread_create_WRK (hg_intercepts.c:270)
==7414==    by 0x4E48C56: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 4 at 0x56190D4 by thread #2
==7414== Locks held: none
==7414==    at 0x4E4AC83: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E486E2: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #1
==7414== Locks held: none
==7414==    at 0x4E4ACE5: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48D38: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x56190d4 is 68 bytes inside a block of size 192 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E49482: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x603B64 by thread #2
==7414== Locks held: none
==7414==    at 0x40247D: coordinates_from_location (octree.c:353)
==7414==    by 0x4021D5: mk_neighborhood (octree.c:292)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #1
==7414== Locks held: none
==7414==    at 0x40247D: coordinates_from_location (octree.c:353)
==7414==    by 0x4021D5: mk_neighborhood (octree.c:292)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x603b64 is 0 bytes inside data symbol "coordinates.3174"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x603B68 by thread #2
==7414== Locks held: none
==7414==    at 0x402487: coordinates_from_location (octree.c:354)
==7414==    by 0x4021D5: mk_neighborhood (octree.c:292)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #1
==7414== Locks held: none
==7414==    at 0x402487: coordinates_from_location (octree.c:354)
==7414==    by 0x4021D5: mk_neighborhood (octree.c:292)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x603b68 is 4 bytes inside data symbol "coordinates.3174"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x603B6C by thread #2
==7414== Locks held: none
==7414==    at 0x402491: coordinates_from_location (octree.c:355)
==7414==    by 0x4021D5: mk_neighborhood (octree.c:292)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #1
==7414== Locks held: none
==7414==    at 0x402491: coordinates_from_location (octree.c:355)
==7414==    by 0x4021D5: mk_neighborhood (octree.c:292)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x603b6c is 8 bytes inside data symbol "coordinates.3174"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561A531 by thread #2
==7414== Locks held: none
==7414==    at 0x401B77: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #1
==7414== Locks held: none
==7414==    at 0x401B82: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x561a531 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x40323D: insert_in_octree (octree.c:562)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561A531 by thread #2
==7414== Locks held: none
==7414==    at 0x401B82: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #1
==7414== Locks held: none
==7414==    at 0x401B82: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x561a531 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x40323D: insert_in_octree (octree.c:562)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 4 at 0x5619314 by thread #2
==7414== Locks held: none
==7414==    at 0x401B89: mk_neighbor (octree.c:219)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #1
==7414== Locks held: none
==7414==    at 0x401B93: mk_neighbor (octree.c:219)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x5619314 is 4 bytes inside a block of size 24 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4029B2: read_input (octree.c:456)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x5619314 by thread #2
==7414== Locks held: none
==7414==    at 0x401B93: mk_neighbor (octree.c:219)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #1
==7414== Locks held: none
==7414==    at 0x401B93: mk_neighbor (octree.c:219)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x5619314 is 4 bytes inside a block of size 24 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4029B2: read_input (octree.c:456)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561A640 by thread #2
==7414== Locks held: none
==7414==    at 0x402167: mk_neighborhood (octree.c:290)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #1
==7414== Locks held: none
==7414==    at 0x401B1D: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x561a640 is 32 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x40323D: insert_in_octree (octree.c:562)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561DCD2 by thread #2
==7414== Locks held: none
==7414==    at 0x40218B: mk_neighborhood (octree.c:290)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561dcd2 is 2 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x5619828 by thread #2
==7414== Locks held: none
==7414==    at 0x401AF2: mk_neighbor (octree.c:213)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #1
==7414== Locks held: none
==7414==    at 0x401B1D: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x5619828 is 40 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x40323D: insert_in_octree (octree.c:562)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561DAA2 by thread #2
==7414== Locks held: none
==7414==    at 0x401BB7: mk_neighbor (octree.c:222)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561daa2 is 2 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561DAA1 by thread #2
==7414== Locks held: none
==7414==    at 0x401BD6: mk_neighbor (octree.c:223)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561daa1 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561DAA1 by thread #2
==7414== Locks held: none
==7414==    at 0x401BDD: mk_neighbor (octree.c:223)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561daa1 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ---Thread-Announcement------------------------------------------
==7414== 
==7414== Thread #3 was created
==7414==    at 0x53565EE: clone (clone.S:74)
==7414==    by 0x5058279: do_clone.constprop.3 (createthread.c:75)
==7414==    by 0x5059722: create_thread (createthread.c:245)
==7414==    by 0x5059722: pthread_create@@GLIBC_2.2.5 (pthread_create.c:606)
==7414==    by 0x4C2EEBD: pthread_create_WRK (hg_intercepts.c:270)
==7414==    by 0x4E48C56: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x561CE44 by thread #3
==7414== Locks held: none
==7414==    at 0x4E4AFB2: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48721: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous read of size 4 by thread #2
==7414== Locks held: none
==7414==    at 0x4E4AF8B: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48721: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561ce44 is 196 bytes inside a block of size 2,080 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48759: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447C5: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x561CE04 by thread #3
==7414== Locks held: none
==7414==    at 0x4E4AF09: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48721: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous read of size 4 by thread #2
==7414== Locks held: none
==7414==    at 0x4E4AF80: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48721: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561ce04 is 132 bytes inside a block of size 2,080 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48759: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447C5: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 4 at 0x5619110 by thread #3
==7414== Locks held: none
==7414==    at 0x4E4AD3B: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E486EF: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #1
==7414== Locks held: none
==7414==    at 0x4E4ACDF: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48D38: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x5619110 is 128 bytes inside a block of size 192 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E49482: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 4 at 0x561CE04 by thread #4
==7414== Locks held: none
==7414==    at 0x4E4AE4B: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48721: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #3
==7414== Locks held: none
==7414==    at 0x4E4AF09: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48721: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561ce04 is 132 bytes inside a block of size 2,080 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48759: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447C5: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 4 at 0x56190D4 by thread #4
==7414== Locks held: none
==7414==    at 0x4E4AD30: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E486EF: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #1
==7414== Locks held: none
==7414==    at 0x4E4ACE5: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48D38: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x56190d4 is 68 bytes inside a block of size 192 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E49482: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 4 at 0x56190D4 by thread #4
==7414== Locks held: none
==7414==    at 0x4E4AC7B: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E486EF: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #1
==7414== Locks held: none
==7414==    at 0x4E4ACE5: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48D38: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x56190d4 is 68 bytes inside a block of size 192 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E49482: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 4 at 0x561CE04 by thread #1
==7414== Locks held: none
==7414==    at 0x4E4AE4B: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E49AE8: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #3
==7414== Locks held: none
==7414==    at 0x4E4AF09: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48721: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561ce04 is 132 bytes inside a block of size 2,080 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48759: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447C5: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 8 at 0xFFF000180 by thread #1
==7414== Locks held: none
==7414==    at 0x400C2E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous read of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x400E75: main._omp_fn.0 (project.c:42)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0xfff000180 is on thread #1's stack
==7414==  in frame #0, created by main (project.c:15)
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0xFFF000188 by thread #1
==7414== Locks held: none
==7414==    at 0x400C35: main (project.c:42)
==7414== 
==7414== This conflicts with a previous read of size 4 by thread #3
==7414== Locks held: none
==7414==    at 0x400E81: main._omp_fn.0 (project.c:42)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0xfff000188 is on thread #1's stack
==7414==  in frame #0, created by main (project.c:15)
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 8 at 0xFFF000178 by thread #1
==7414== Locks held: none
==7414==    at 0x400C3C: main (project.c:42)
==7414== 
==7414== This conflicts with a previous read of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x400E8B: main._omp_fn.0 (project.c:42)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0xfff000178 is on thread #1's stack
==7414==  in frame #0, created by main (project.c:15)
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 8 at 0xFFF000170 by thread #1
==7414== Locks held: none
==7414==    at 0x400C40: main (project.c:42)
==7414== 
==7414== This conflicts with a previous read of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x400E97: main._omp_fn.0 (project.c:42)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0xfff000170 is on thread #1's stack
==7414==  in frame #0, created by main (project.c:15)
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x5619378 by thread #1
==7414== Locks held: none
==7414==    at 0x4E48E50: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x4E486DA: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x5619378 is 8 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4C2C3EF: realloc (vg_replace_malloc.c:692)
==7414==    by 0x4E41678: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E4946A: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 8 at 0x62196A0 by thread #1
==7414== Locks held: none
==7414==    at 0x4E48E5B: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x4E48601: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x62196a0 is not stack'd, malloc'd or on a free list
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 8 at 0x62196B0 by thread #1
==7414== Locks held: none
==7414==    at 0x4E48E5F: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x4E48606: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x62196b0 is not stack'd, malloc'd or on a free list
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x62196B8 by thread #1
==7414== Locks held: none
==7414==    at 0x4E48E67: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x4E4860F: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x62196b8 is not stack'd, malloc'd or on a free list
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 8 at 0x62196A8 by thread #1
==7414== Locks held: none
==7414==    at 0x4E48E79: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x4E485F8: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x62196a8 is not stack'd, malloc'd or on a free list
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x62196C8 by thread #1
==7414== Locks held: none
==7414==    at 0x4E48E80: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x4E48621: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x62196c8 is not stack'd, malloc'd or on a free list
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x62196C4 by thread #1
==7414== Locks held: none
==7414==    at 0x4E48E87: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x4E48618: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x62196c4 is not stack'd, malloc'd or on a free list
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x62196EC by thread #1
==7414== Locks held: none
==7414==    at 0x4E48E8B: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #2
==7414== Locks held: none
==7414==    at 0x4E48644: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x62196ec is not stack'd, malloc'd or on a free list
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x62196BC by thread #1
==7414== Locks held: none
==7414==    at 0x4E48EA3: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x4E4860F: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x62196bc is not stack'd, malloc'd or on a free list
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 8 at 0x62196D0 by thread #1
==7414== Locks held: none
==7414==    at 0x4E48EB0: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x4E4862A: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x62196d0 is not stack'd, malloc'd or on a free list
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 8 at 0x62196D8 by thread #1
==7414== Locks held: none
==7414==    at 0x4E48EB8: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x4E48633: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x62196d8 is not stack'd, malloc'd or on a free list
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x62196C0 by thread #1
==7414== Locks held: none
==7414==    at 0x4E48EC0: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x4E48618: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x62196c0 is not stack'd, malloc'd or on a free list
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 8 at 0x62196E0 by thread #1
==7414== Locks held: none
==7414==    at 0x4E48ECB: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x4E4863C: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x62196e0 is not stack'd, malloc'd or on a free list
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x6A1A690 by thread #3
==7414== Locks held: none
==7414==    at 0x4E486F0: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #1
==7414== Locks held: none
==7414==    at 0x4E48F0B: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x6a1a690 is not stack'd, malloc'd or on a free list
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x6A1A698 by thread #3
==7414== Locks held: none
==7414==    at 0x4E486F4: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #1
==7414== Locks held: none
==7414==    at 0x4E48F19: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x6a1a698 is not stack'd, malloc'd or on a free list
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 8 at 0x6A1A690 by thread #3
==7414== Locks held: none
==7414==    at 0x4E486F9: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #1
==7414== Locks held: none
==7414==    at 0x4E48F0B: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x6a1a690 is not stack'd, malloc'd or on a free list
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x6A1A6A0 by thread #3
==7414== Locks held: none
==7414==    at 0x4E48706: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #1
==7414== Locks held: none
==7414==    at 0x4E48E5B: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x6a1a6a0 is not stack'd, malloc'd or on a free list
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x6A1A6E0 by thread #3
==7414== Locks held: none
==7414==    at 0x4E4870B: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #1
==7414== Locks held: none
==7414==    at 0x4E48ECB: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x6a1a6e0 is not stack'd, malloc'd or on a free list
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0xFFF000180 by thread #3
==7414== Locks held: none
==7414==    at 0x400E75: main._omp_fn.0 (project.c:42)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #1
==7414== Locks held: none
==7414==    at 0x400C2E: main (project.c:42)
==7414==  Address 0xfff000180 is on thread #1's stack
==7414==  in frame #3, created by main (project.c:15)
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 4 at 0xFFF000188 by thread #3
==7414== Locks held: none
==7414==    at 0x400E81: main._omp_fn.0 (project.c:42)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #1
==7414== Locks held: none
==7414==    at 0x400C35: main (project.c:42)
==7414==  Address 0xfff000188 is on thread #1's stack
==7414==  in frame #3, created by main (project.c:15)
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0xFFF000178 by thread #3
==7414== Locks held: none
==7414==    at 0x400E8B: main._omp_fn.0 (project.c:42)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #1
==7414== Locks held: none
==7414==    at 0x400C3C: main (project.c:42)
==7414==  Address 0xfff000178 is on thread #1's stack
==7414==  in frame #3, created by main (project.c:15)
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0xFFF000170 by thread #3
==7414== Locks held: none
==7414==    at 0x400E97: main._omp_fn.0 (project.c:42)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #1
==7414== Locks held: none
==7414==    at 0x400C40: main (project.c:42)
==7414==  Address 0xfff000170 is on thread #1's stack
==7414==  in frame #3, created by main (project.c:15)
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 4 at 0x561E1F0 by thread #3
==7414== Locks held: none
==7414==    at 0x4E44961: omp_get_num_threads (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400EEF: main._omp_fn.0 (project.c:42)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561e1f0 is 0 bytes inside a block of size 2,080 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48759: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447C5: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 4 at 0x6A1A6B8 by thread #3
==7414== Locks held: none
==7414==    at 0x4E44977: omp_get_thread_num (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400EF6: main._omp_fn.0 (project.c:42)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #1
==7414== Locks held: none
==7414==    at 0x4E48E67: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x6a1a6b8 is not stack'd, malloc'd or on a free list
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 4 at 0x561E274 by thread #3
==7414== Locks held: none
==7414==    at 0x4E4AF80: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48721: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561e274 is 132 bytes inside a block of size 2,080 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48759: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447C5: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 4 at 0x561E2B4 by thread #3
==7414== Locks held: none
==7414==    at 0x4E4AF8B: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48721: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561e2b4 is 196 bytes inside a block of size 2,080 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48759: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447C5: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561A458 by thread #4
==7414== Locks held: none
==7414==    at 0x401C08: mk_neighbor (octree.c:230)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x401C33: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561a458 is 40 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402EDA: insert_in_octree (octree.c:535)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561EB90 by thread #4
==7414== Locks held: none
==7414==    at 0x401A85: mk_neighbor (octree.c:205)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561eb90 is 0 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561EBA0 by thread #4
==7414== Locks held: none
==7414==    at 0x401AE2: mk_neighbor (octree.c:213)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561eba0 is 16 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 8 at 0x561ECA0 by thread #4
==7414== Locks held: none
==7414==    at 0x401B1D: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561eca0 is 32 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401DE5: mk_neighbor (octree.c:243)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x603B64 by thread #1
==7414== Locks held: none
==7414==    at 0x40247D: coordinates_from_location (octree.c:353)
==7414==    by 0x4021D5: mk_neighborhood (octree.c:292)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #3
==7414== Locks held: none
==7414==    at 0x40247D: coordinates_from_location (octree.c:353)
==7414==    by 0x4021D5: mk_neighborhood (octree.c:292)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x603b64 is 0 bytes inside data symbol "coordinates.3174"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x603B68 by thread #1
==7414== Locks held: none
==7414==    at 0x402487: coordinates_from_location (octree.c:354)
==7414==    by 0x4021D5: mk_neighborhood (octree.c:292)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #3
==7414== Locks held: none
==7414==    at 0x402487: coordinates_from_location (octree.c:354)
==7414==    by 0x4021D5: mk_neighborhood (octree.c:292)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x603b68 is 4 bytes inside data symbol "coordinates.3174"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x603B6C by thread #1
==7414== Locks held: none
==7414==    at 0x402491: coordinates_from_location (octree.c:355)
==7414==    by 0x4021D5: mk_neighborhood (octree.c:292)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #3
==7414== Locks held: none
==7414==    at 0x402491: coordinates_from_location (octree.c:355)
==7414==    by 0x4021D5: mk_neighborhood (octree.c:292)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x603b6c is 8 bytes inside data symbol "coordinates.3174"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x561E2B4 by thread #1
==7414== Locks held: none
==7414==    at 0x4E4AFB2: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E49AE8: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous read of size 4 by thread #4
==7414== Locks held: none
==7414==    at 0x4E4AF8B: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48721: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561e2b4 is 196 bytes inside a block of size 2,080 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48759: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447C5: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x561E274 by thread #1
==7414== Locks held: none
==7414==    at 0x4E4AF09: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E49AE8: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous read of size 4 by thread #4
==7414== Locks held: none
==7414==    at 0x4E4AF80: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48721: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561e274 is 132 bytes inside a block of size 2,080 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48759: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447C5: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561E818 by thread #2
==7414== Locks held: none
==7414==    at 0x4E48722: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561e818 is 1,576 bytes inside a block of size 2,080 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48759: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447C5: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 8 at 0x6219690 by thread #1
==7414== Locks held: none
==7414==    at 0x4E48F0B: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x4E486F9: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x6219690 is not stack'd, malloc'd or on a free list
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 8 at 0x6219698 by thread #1
==7414== Locks held: none
==7414==    at 0x4E48F19: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous read of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x4E486F4: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x6219698 is not stack'd, malloc'd or on a free list
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 8 at 0x56194D8 by thread #3
==7414== Locks held: none
==7414==    at 0x401C33: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous read of size 8 by thread #4
==7414== Locks held: none
==7414==    at 0x400F43: main._omp_fn.0 (project.c:45)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x56194d8 is 56 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402A91: read_input (octree.c:471)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x5619431 by thread #3
==7414== Locks held: none
==7414==    at 0x401F57: mk_neighbor (octree.c:254)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #2
==7414== Locks held: none
==7414==    at 0x401F62: mk_neighbor (octree.c:254)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x5619431 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402A40: read_input (octree.c:466)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x5619431 by thread #3
==7414== Locks held: none
==7414==    at 0x401F62: mk_neighbor (octree.c:254)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #2
==7414== Locks held: none
==7414==    at 0x401F62: mk_neighbor (octree.c:254)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x5619431 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402A40: read_input (octree.c:466)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x56194D8 by thread #4
==7414== Locks held: none
==7414==    at 0x400F43: main._omp_fn.0 (project.c:45)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x401C33: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x56194d8 is 56 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402A91: read_input (octree.c:471)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561F658 by thread #4
==7414== Locks held: none
==7414==    at 0x400F75: main._omp_fn.0 (project.c:45)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561f658 is 8 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561F6D0 by thread #4
==7414== Locks held: none
==7414==    at 0x400F86: main._omp_fn.0 (project.c:45)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561f6d0 is 16 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C94: mk_neighbor (octree.c:234)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 4 at 0x561CE00 by thread #4
==7414== Locks held: none
==7414==    at 0x4E4AFB0: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48721: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561ce00 is 128 bytes inside a block of size 2,080 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48759: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447C5: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x561CE40 by thread #4
==7414== Locks held: none
==7414==    at 0x4E4AEDB: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48721: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #3
==7414== Locks held: none
==7414==    at 0x4E4AEDB: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48721: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561ce40 is 192 bytes inside a block of size 2,080 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48759: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447C5: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x561D29C by thread #4
==7414== Locks held: none
==7414==    at 0x4E4AEDE: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48721: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #3
==7414== Locks held: none
==7414==    at 0x4E4AEDE: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48721: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561d29c is 1,308 bytes inside a block of size 2,080 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48759: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447C5: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 4 at 0x561D290 by thread #4
==7414== Locks held: none
==7414==    at 0x4E4AEE8: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48721: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561d290 is 1,296 bytes inside a block of size 2,080 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48759: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447C5: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x5619110 by thread #4
==7414== Locks held: none
==7414==    at 0x4E4ACDF: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E486EF: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #1
==7414== Locks held: none
==7414==    at 0x4E4ACDF: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48D38: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x5619110 is 128 bytes inside a block of size 192 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E49482: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x56190D4 by thread #4
==7414== Locks held: none
==7414==    at 0x4E4ACE5: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E486EF: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #1
==7414== Locks held: none
==7414==    at 0x4E4ACE5: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48D38: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x56190d4 is 68 bytes inside a block of size 192 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E49482: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 4 at 0x56190D4 by thread #1
==7414== Locks held: none
==7414==    at 0x4E4AC7B: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48D38: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #4
==7414== Locks held: none
==7414==    at 0x4E4ACE5: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E486EF: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x56190d4 is 68 bytes inside a block of size 192 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E49482: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x56194B8 by thread #1
==7414== Locks held: none
==7414==    at 0x401C08: mk_neighbor (octree.c:230)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x401C33: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x56194b8 is 24 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402A91: read_input (octree.c:471)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561EDF0 by thread #1
==7414== Locks held: none
==7414==    at 0x401A85: mk_neighbor (octree.c:205)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x561edf0 is 0 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561EDF8 by thread #1
==7414== Locks held: none
==7414==    at 0x401BF8: mk_neighbor (octree.c:230)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x561edf8 is 8 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 4 at 0x56190D4 by thread #1
==7414== Locks held: none
==7414==    at 0x4E4AD30: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48D38: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #4
==7414== Locks held: none
==7414==    at 0x4E4ACE5: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E486EF: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x56190d4 is 68 bytes inside a block of size 192 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E49482: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 4 at 0x5619110 by thread #1
==7414== Locks held: none
==7414==    at 0x4E4AD3B: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48D38: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #4
==7414== Locks held: none
==7414==    at 0x4E4ACDF: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E486EF: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x5619110 is 128 bytes inside a block of size 192 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4E41628: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E49482: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561B2B0 by thread #1
==7414== Locks held: none
==7414==    at 0x402167: mk_neighborhood (octree.c:290)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x401B1D: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561b2b0 is 16 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561FCF2 by thread #1
==7414== Locks held: none
==7414==    at 0x40218B: mk_neighborhood (octree.c:290)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x561fcf2 is 2 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561F3B8 by thread #1
==7414== Locks held: none
==7414==    at 0x4020D7: mk_neighborhood (octree.c:279)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x561f3b8 is 24 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 4 at 0x5619314 by thread #1
==7414== Locks held: none
==7414==    at 0x401330: delete_leaf_node (octree.c:64)
==7414==    by 0x40167B: update_octree (octree.c:129)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #3
==7414== Locks held: none
==7414==    at 0x401B93: mk_neighbor (octree.c:219)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x5619314 is 4 bytes inside a block of size 24 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4029B2: read_input (octree.c:456)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x5619314 by thread #1
==7414== Locks held: none
==7414==    at 0x40133A: delete_leaf_node (octree.c:64)
==7414==    by 0x40167B: update_octree (octree.c:129)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #3
==7414== Locks held: none
==7414==    at 0x401B93: mk_neighbor (octree.c:219)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x5619314 is 4 bytes inside a block of size 24 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4029B2: read_input (octree.c:456)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561DAA1 by thread #1
==7414== Locks held: none
==7414==    at 0x4016B7: update_octree (octree.c:135)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #2
==7414== Locks held: none
==7414==    at 0x401BDD: mk_neighbor (octree.c:223)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561daa1 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 8 at 0x5619828 by thread #1
==7414== Locks held: none
==7414==    at 0x401313: delete_leaf_node (octree.c:62)
==7414==    by 0x40171C: update_octree (octree.c:141)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous read of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x401AF2: mk_neighbor (octree.c:213)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x5619828 is 40 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x40323D: insert_in_octree (octree.c:562)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x56199C8 by thread #1
==7414== Locks held: none
==7414==    at 0x40160C: update_octree (octree.c:125)
==7414==    by 0x40178B: update_octree (octree.c:152)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x401B1D: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x56199c8 is 8 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561DA32 by thread #1
==7414== Locks held: none
==7414==    at 0x401630: update_octree (octree.c:126)
==7414==    by 0x40178B: update_octree (octree.c:152)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561da32 is 2 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561DA31 by thread #1
==7414== Locks held: none
==7414==    at 0x4016B7: update_octree (octree.c:135)
==7414==    by 0x40178B: update_octree (octree.c:152)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561da31 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561DA31 by thread #1
==7414== Locks held: none
==7414==    at 0x4016E5: update_octree (octree.c:137)
==7414==    by 0x40178B: update_octree (octree.c:152)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561da31 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561DA32 by thread #1
==7414== Locks held: none
==7414==    at 0x401701: update_octree (octree.c:138)
==7414==    by 0x40178B: update_octree (octree.c:152)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561da32 is 2 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x56198D1 by thread #1
==7414== Locks held: none
==7414==    at 0x40131E: delete_leaf_node (octree.c:63)
==7414==    by 0x40167B: update_octree (octree.c:129)
==7414==    by 0x40178B: update_octree (octree.c:152)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #2
==7414== Locks held: none
==7414==    at 0x401B82: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x56198d1 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x56198D1 by thread #1
==7414== Locks held: none
==7414==    at 0x401329: delete_leaf_node (octree.c:63)
==7414==    by 0x40167B: update_octree (octree.c:129)
==7414==    by 0x40178B: update_octree (octree.c:152)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #2
==7414== Locks held: none
==7414==    at 0x401B82: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x56198d1 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 8 at 0x5619C78 by thread #1
==7414== Locks held: none
==7414==    at 0x401313: delete_leaf_node (octree.c:62)
==7414==    by 0x40167B: update_octree (octree.c:129)
==7414==    by 0x4017BD: update_octree (octree.c:155)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous read of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x401AF2: mk_neighbor (octree.c:213)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x5619c78 is 8 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 8 at 0x5619E80 by thread #1
==7414== Locks held: none
==7414==    at 0x401313: delete_leaf_node (octree.c:62)
==7414==    by 0x40167B: update_octree (octree.c:129)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous read of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x401AF2: mk_neighbor (octree.c:213)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x5619e80 is 0 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x5619D91 by thread #1
==7414== Locks held: none
==7414==    at 0x40131E: delete_leaf_node (octree.c:63)
==7414==    by 0x40167B: update_octree (octree.c:129)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #2
==7414== Locks held: none
==7414==    at 0x401B82: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x5619d91 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== 
==7414== More than 100 errors detected.  Subsequent errors
==7414== will still be recorded, but in less detail than before.
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x5619E90 by thread #1
==7414== Locks held: none
==7414==    at 0x40160C: update_octree (octree.c:125)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x401B1D: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x5619e90 is 16 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561EAF2 by thread #1
==7414== Locks held: none
==7414==    at 0x401630: update_octree (octree.c:126)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561eaf2 is 2 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561EAF1 by thread #1
==7414== Locks held: none
==7414==    at 0x4016B7: update_octree (octree.c:135)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561eaf1 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561B068 by thread #1
==7414== Locks held: none
==7414==    at 0x40160C: update_octree (octree.c:125)
==7414==    by 0x401853: update_octree (octree.c:164)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x401B1D: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561b068 is 40 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561EA52 by thread #1
==7414== Locks held: none
==7414==    at 0x401630: update_octree (octree.c:126)
==7414==    by 0x401853: update_octree (octree.c:164)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561ea52 is 2 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561EA51 by thread #1
==7414== Locks held: none
==7414==    at 0x4016B7: update_octree (octree.c:135)
==7414==    by 0x401853: update_octree (octree.c:164)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561ea51 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561EA51 by thread #1
==7414== Locks held: none
==7414==    at 0x4016E5: update_octree (octree.c:137)
==7414==    by 0x401853: update_octree (octree.c:164)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561ea51 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561EA52 by thread #1
==7414== Locks held: none
==7414==    at 0x401701: update_octree (octree.c:138)
==7414==    by 0x401853: update_octree (octree.c:164)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561ea52 is 2 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561B2B0 by thread #1
==7414== Locks held: none
==7414==    at 0x40160C: update_octree (octree.c:125)
==7414==    by 0x401885: update_octree (octree.c:167)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x401B1D: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561b2b0 is 16 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561FCF2 by thread #1
==7414== Locks held: none
==7414==    at 0x401630: update_octree (octree.c:126)
==7414==    by 0x401885: update_octree (octree.c:167)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561fcf2 is 2 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561FCF1 by thread #1
==7414== Locks held: none
==7414==    at 0x4016B7: update_octree (octree.c:135)
==7414==    by 0x401885: update_octree (octree.c:167)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561fcf1 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561FCF1 by thread #1
==7414== Locks held: none
==7414==    at 0x4016E5: update_octree (octree.c:137)
==7414==    by 0x401885: update_octree (octree.c:167)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561fcf1 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561FCF2 by thread #1
==7414== Locks held: none
==7414==    at 0x401701: update_octree (octree.c:138)
==7414==    by 0x401885: update_octree (octree.c:167)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561fcf2 is 2 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561A210 by thread #1
==7414== Locks held: none
==7414==    at 0x40160C: update_octree (octree.c:125)
==7414==    by 0x4017BD: update_octree (octree.c:155)
==7414==    by 0x40178B: update_octree (octree.c:152)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x401B1D: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561a210 is 16 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x40323D: insert_in_octree (octree.c:562)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561F5B2 by thread #1
==7414== Locks held: none
==7414==    at 0x401630: update_octree (octree.c:126)
==7414==    by 0x4017BD: update_octree (octree.c:155)
==7414==    by 0x40178B: update_octree (octree.c:152)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561f5b2 is 2 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561F5B1 by thread #1
==7414== Locks held: none
==7414==    at 0x4016B7: update_octree (octree.c:135)
==7414==    by 0x4017BD: update_octree (octree.c:155)
==7414==    by 0x40178B: update_octree (octree.c:152)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561f5b1 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561A111 by thread #1
==7414== Locks held: none
==7414==    at 0x40131E: delete_leaf_node (octree.c:63)
==7414==    by 0x40171C: update_octree (octree.c:141)
==7414==    by 0x4017BD: update_octree (octree.c:155)
==7414==    by 0x40178B: update_octree (octree.c:152)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #3
==7414== Locks held: none
==7414==    at 0x401B82: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561a111 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x40323D: insert_in_octree (octree.c:562)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561A111 by thread #1
==7414== Locks held: none
==7414==    at 0x401329: delete_leaf_node (octree.c:63)
==7414==    by 0x40171C: update_octree (octree.c:141)
==7414==    by 0x4017BD: update_octree (octree.c:155)
==7414==    by 0x40178B: update_octree (octree.c:152)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #3
==7414== Locks held: none
==7414==    at 0x401B82: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561a111 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x40323D: insert_in_octree (octree.c:562)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561B900 by thread #1
==7414== Locks held: none
==7414==    at 0x40160C: update_octree (octree.c:125)
==7414==    by 0x401821: update_octree (octree.c:161)
==7414==    by 0x40178B: update_octree (octree.c:152)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x401B1D: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561b900 is 48 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561DFA2 by thread #1
==7414== Locks held: none
==7414==    at 0x401630: update_octree (octree.c:126)
==7414==    by 0x401821: update_octree (octree.c:161)
==7414==    by 0x40178B: update_octree (octree.c:152)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561dfa2 is 2 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561DFA1 by thread #1
==7414== Locks held: none
==7414==    at 0x4016B7: update_octree (octree.c:135)
==7414==    by 0x401821: update_octree (octree.c:161)
==7414==    by 0x40178B: update_octree (octree.c:152)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561dfa1 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561DFA1 by thread #1
==7414== Locks held: none
==7414==    at 0x4016E5: update_octree (octree.c:137)
==7414==    by 0x401821: update_octree (octree.c:161)
==7414==    by 0x40178B: update_octree (octree.c:152)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561dfa1 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561DFA2 by thread #1
==7414== Locks held: none
==7414==    at 0x401701: update_octree (octree.c:138)
==7414==    by 0x401821: update_octree (octree.c:161)
==7414==    by 0x40178B: update_octree (octree.c:152)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561dfa2 is 2 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561A040 by thread #1
==7414== Locks held: none
==7414==    at 0x401860: update_octree (octree.c:166)
==7414==    by 0x40178B: update_octree (octree.c:152)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x401C33: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561a040 is 48 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402EDA: insert_in_octree (octree.c:535)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561F3A0 by thread #1
==7414== Locks held: none
==7414==    at 0x4015D7: update_octree (octree.c:122)
==7414==    by 0x401885: update_octree (octree.c:167)
==7414==    by 0x40178B: update_octree (octree.c:152)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561f3a0 is 0 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561F3B0 by thread #1
==7414== Locks held: none
==7414==    at 0x4015FB: update_octree (octree.c:125)
==7414==    by 0x401885: update_octree (octree.c:167)
==7414==    by 0x40178B: update_octree (octree.c:152)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561f3b0 is 16 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561A620 by thread #1
==7414== Locks held: none
==7414==    at 0x40160C: update_octree (octree.c:125)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x4017BD: update_octree (octree.c:155)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x401B1D: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561a620 is 0 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x40323D: insert_in_octree (octree.c:562)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561DE12 by thread #1
==7414== Locks held: none
==7414==    at 0x401630: update_octree (octree.c:126)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x4017BD: update_octree (octree.c:155)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561de12 is 2 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561DE11 by thread #1
==7414== Locks held: none
==7414==    at 0x4016E5: update_octree (octree.c:137)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x4017BD: update_octree (octree.c:155)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561de11 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561DE12 by thread #1
==7414== Locks held: none
==7414==    at 0x401701: update_octree (octree.c:138)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x4017BD: update_octree (octree.c:155)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561de12 is 2 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561A6A1 by thread #1
==7414== Locks held: none
==7414==    at 0x401650: update_octree (octree.c:127)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x4017BD: update_octree (octree.c:155)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #2
==7414== Locks held: none
==7414==    at 0x40226F: mk_neighborhood (octree.c:306)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561a6a1 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402DBB: insert_in_octree (octree.c:523)
==7414==    by 0x40323D: insert_in_octree (octree.c:562)
==7414==    by 0x40323D: insert_in_octree (octree.c:562)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561ACA1 by thread #1
==7414== Locks held: none
==7414==    at 0x401699: update_octree (octree.c:131)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x4017BD: update_octree (octree.c:155)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #2
==7414== Locks held: none
==7414==    at 0x40226F: mk_neighborhood (octree.c:306)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561aca1 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402DBB: insert_in_octree (octree.c:523)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561A861 by thread #1
==7414== Locks held: none
==7414==    at 0x401650: update_octree (octree.c:127)
==7414==    by 0x40178B: update_octree (octree.c:152)
==7414==    by 0x4017BD: update_octree (octree.c:155)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #2
==7414== Locks held: none
==7414==    at 0x40226F: mk_neighborhood (octree.c:306)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561a861 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402DBB: insert_in_octree (octree.c:523)
==7414==    by 0x40323D: insert_in_octree (octree.c:562)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561A861 by thread #1
==7414== Locks held: none
==7414==    at 0x401699: update_octree (octree.c:131)
==7414==    by 0x40178B: update_octree (octree.c:152)
==7414==    by 0x4017BD: update_octree (octree.c:155)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #2
==7414== Locks held: none
==7414==    at 0x40226F: mk_neighborhood (octree.c:306)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561a861 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402DBB: insert_in_octree (octree.c:523)
==7414==    by 0x40323D: insert_in_octree (octree.c:562)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561B741 by thread #1
==7414== Locks held: none
==7414==    at 0x401650: update_octree (octree.c:127)
==7414==    by 0x401821: update_octree (octree.c:161)
==7414==    by 0x4017BD: update_octree (octree.c:155)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #2
==7414== Locks held: none
==7414==    at 0x40226F: mk_neighborhood (octree.c:306)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561b741 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402DBB: insert_in_octree (octree.c:523)
==7414==    by 0x40323D: insert_in_octree (octree.c:562)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561A458 by thread #1
==7414== Locks held: none
==7414==    at 0x40182E: update_octree (octree.c:163)
==7414==    by 0x4017BD: update_octree (octree.c:155)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x401C33: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561a458 is 40 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402EDA: insert_in_octree (octree.c:535)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561EB90 by thread #1
==7414== Locks held: none
==7414==    at 0x4015D7: update_octree (octree.c:122)
==7414==    by 0x401853: update_octree (octree.c:164)
==7414==    by 0x4017BD: update_octree (octree.c:155)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561eb90 is 0 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561EBA0 by thread #1
==7414== Locks held: none
==7414==    at 0x4015FB: update_octree (octree.c:125)
==7414==    by 0x401853: update_octree (octree.c:164)
==7414==    by 0x4017BD: update_octree (octree.c:155)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561eba0 is 16 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x56194B8 by thread #1
==7414== Locks held: none
==7414==    at 0x4017CA: update_octree (octree.c:157)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x401C33: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x56194b8 is 24 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402A91: read_input (octree.c:471)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561EDF0 by thread #1
==7414== Locks held: none
==7414==    at 0x4015D7: update_octree (octree.c:122)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561edf0 is 0 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561EDF8 by thread #1
==7414== Locks held: none
==7414==    at 0x401734: update_octree (octree.c:148)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561edf8 is 8 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561EE60 by thread #1
==7414== Locks held: none
==7414==    at 0x401738: update_octree (octree.c:148)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561ee60 is 0 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C94: mk_neighbor (octree.c:234)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561EF60 by thread #1
==7414== Locks held: none
==7414==    at 0x4015D7: update_octree (octree.c:122)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561ef60 is 0 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x401FF7: mk_neighbor (octree.c:261)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561EF70 by thread #1
==7414== Locks held: none
==7414==    at 0x4015FB: update_octree (octree.c:125)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561ef70 is 16 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x401FF7: mk_neighbor (octree.c:261)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561EF78 by thread #1
==7414== Locks held: none
==7414==    at 0x40134D: delete_leaf_node (octree.c:66)
==7414==    by 0x40171C: update_octree (octree.c:141)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561ef78 is 24 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x401FF7: mk_neighbor (octree.c:261)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561EF80 by thread #1
==7414== Locks held: none
==7414==    at 0x401358: delete_leaf_node (octree.c:66)
==7414==    by 0x40171C: update_octree (octree.c:141)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561ef80 is 32 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x401FF7: mk_neighbor (octree.c:261)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561EF68 by thread #1
==7414== Locks held: none
==7414==    at 0x401218: delete_inner_node (octree.c:49)
==7414==    by 0x401365: delete_leaf_node (octree.c:66)
==7414==    by 0x40171C: update_octree (octree.c:141)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561ef68 is 8 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x401FF7: mk_neighbor (octree.c:261)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 8 at 0x561EE60 by thread #1
==7414== Locks held: none
==7414==    at 0x40127A: delete_inner_node (octree.c:52)
==7414==    by 0x401365: delete_leaf_node (octree.c:66)
==7414==    by 0x40171C: update_octree (octree.c:141)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561ee60 is 0 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C94: mk_neighbor (octree.c:234)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561EDF1 by thread #1
==7414== Locks held: none
==7414==    at 0x401285: delete_inner_node (octree.c:53)
==7414==    by 0x401365: delete_leaf_node (octree.c:66)
==7414==    by 0x40171C: update_octree (octree.c:141)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561edf1 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561EDF1 by thread #1
==7414== Locks held: none
==7414==    at 0x401290: delete_inner_node (octree.c:53)
==7414==    by 0x401365: delete_leaf_node (octree.c:66)
==7414==    by 0x40171C: update_octree (octree.c:141)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561edf1 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561EE68 by thread #1
==7414== Locks held: none
==7414==    at 0x401766: update_octree (octree.c:151)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561ee68 is 8 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C94: mk_neighbor (octree.c:234)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561EE70 by thread #1
==7414== Locks held: none
==7414==    at 0x401798: update_octree (octree.c:154)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561ee70 is 16 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C94: mk_neighbor (octree.c:234)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561EE78 by thread #1
==7414== Locks held: none
==7414==    at 0x4017CA: update_octree (octree.c:157)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561ee78 is 24 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C94: mk_neighbor (octree.c:234)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561EE80 by thread #1
==7414== Locks held: none
==7414==    at 0x4017FC: update_octree (octree.c:160)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561ee80 is 32 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C94: mk_neighbor (octree.c:234)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561FD40 by thread #1
==7414== Locks held: none
==7414==    at 0x4015D7: update_octree (octree.c:122)
==7414==    by 0x401821: update_octree (octree.c:161)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561fd40 is 0 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561FD50 by thread #1
==7414== Locks held: none
==7414==    at 0x4015FB: update_octree (octree.c:125)
==7414==    by 0x401821: update_octree (octree.c:161)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561fd50 is 16 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561EE10 by thread #1
==7414== Locks held: none
==7414==    at 0x4012A3: delete_inner_node (octree.c:54)
==7414==    by 0x401365: delete_leaf_node (octree.c:66)
==7414==    by 0x40171C: update_octree (octree.c:141)
==7414==    by 0x401821: update_octree (octree.c:161)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561ee10 is 32 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561EE08 by thread #1
==7414== Locks held: none
==7414==    at 0x4012B0: delete_inner_node (octree.c:55)
==7414==    by 0x401365: delete_leaf_node (octree.c:66)
==7414==    by 0x40171C: update_octree (octree.c:141)
==7414==    by 0x401821: update_octree (octree.c:161)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561ee08 is 24 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561EE00 by thread #1
==7414== Locks held: none
==7414==    at 0x40123B: delete_inner_node (octree.c:50)
==7414==    by 0x4012C8: delete_inner_node (octree.c:55)
==7414==    by 0x401365: delete_leaf_node (octree.c:66)
==7414==    by 0x40171C: update_octree (octree.c:141)
==7414==    by 0x401821: update_octree (octree.c:161)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561ee00 is 16 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 8 at 0x56194B8 by thread #1
==7414== Locks held: none
==7414==    at 0x40127A: delete_inner_node (octree.c:52)
==7414==    by 0x4012C8: delete_inner_node (octree.c:55)
==7414==    by 0x401365: delete_leaf_node (octree.c:66)
==7414==    by 0x40171C: update_octree (octree.c:141)
==7414==    by 0x401821: update_octree (octree.c:161)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x401C33: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x56194b8 is 24 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402A91: read_input (octree.c:471)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x5619431 by thread #1
==7414== Locks held: none
==7414==    at 0x401285: delete_inner_node (octree.c:53)
==7414==    by 0x4012C8: delete_inner_node (octree.c:55)
==7414==    by 0x401365: delete_leaf_node (octree.c:66)
==7414==    by 0x40171C: update_octree (octree.c:141)
==7414==    by 0x401821: update_octree (octree.c:161)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #3
==7414== Locks held: none
==7414==    at 0x401F62: mk_neighbor (octree.c:254)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x5619431 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402A40: read_input (octree.c:466)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x5619431 by thread #1
==7414== Locks held: none
==7414==    at 0x401290: delete_inner_node (octree.c:53)
==7414==    by 0x4012C8: delete_inner_node (octree.c:55)
==7414==    by 0x401365: delete_leaf_node (octree.c:66)
==7414==    by 0x40171C: update_octree (octree.c:141)
==7414==    by 0x401821: update_octree (octree.c:161)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #3
==7414== Locks held: none
==7414==    at 0x401F62: mk_neighbor (octree.c:254)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x5619431 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402A40: read_input (octree.c:466)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561EE88 by thread #1
==7414== Locks held: none
==7414==    at 0x40182E: update_octree (octree.c:163)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561ee88 is 232 bytes inside an unallocated block of size 912 in arena "client"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561EE90 by thread #1
==7414== Locks held: none
==7414==    at 0x401860: update_octree (octree.c:166)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561ee90 is 240 bytes inside an unallocated block of size 912 in arena "client"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561EE98 by thread #1
==7414== Locks held: none
==7414==    at 0x401892: update_octree (octree.c:169)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561ee98 is 248 bytes inside an unallocated block of size 912 in arena "client"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561F351 by thread #1
==7414== Locks held: none
==7414==    at 0x4016E5: update_octree (octree.c:137)
==7414==    by 0x4017BD: update_octree (octree.c:155)
==7414==    by 0x401821: update_octree (octree.c:161)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561f351 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561F352 by thread #1
==7414== Locks held: none
==7414==    at 0x401701: update_octree (octree.c:138)
==7414==    by 0x4017BD: update_octree (octree.c:155)
==7414==    by 0x401821: update_octree (octree.c:161)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561f352 is 2 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561C471 by thread #1
==7414== Locks held: none
==7414==    at 0x401650: update_octree (octree.c:127)
==7414==    by 0x4017BD: update_octree (octree.c:155)
==7414==    by 0x401821: update_octree (octree.c:161)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #3
==7414== Locks held: none
==7414==    at 0x40226F: mk_neighborhood (octree.c:306)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561c471 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402DBB: insert_in_octree (octree.c:523)
==7414==    by 0x40323D: insert_in_octree (octree.c:562)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561C471 by thread #1
==7414== Locks held: none
==7414==    at 0x401699: update_octree (octree.c:131)
==7414==    by 0x4017BD: update_octree (octree.c:155)
==7414==    by 0x401821: update_octree (octree.c:161)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #3
==7414== Locks held: none
==7414==    at 0x40226F: mk_neighborhood (octree.c:306)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561c471 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402DBB: insert_in_octree (octree.c:523)
==7414==    by 0x40323D: insert_in_octree (octree.c:562)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561C631 by thread #1
==7414== Locks held: none
==7414==    at 0x401650: update_octree (octree.c:127)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x401821: update_octree (octree.c:161)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #3
==7414== Locks held: none
==7414==    at 0x40226F: mk_neighborhood (octree.c:306)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561c631 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402DBB: insert_in_octree (octree.c:523)
==7414==    by 0x40323D: insert_in_octree (octree.c:562)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561C631 by thread #1
==7414== Locks held: none
==7414==    at 0x401699: update_octree (octree.c:131)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x401821: update_octree (octree.c:161)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #3
==7414== Locks held: none
==7414==    at 0x40226F: mk_neighborhood (octree.c:306)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561c631 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402DBB: insert_in_octree (octree.c:523)
==7414==    by 0x40323D: insert_in_octree (octree.c:562)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561F561 by thread #1
==7414== Locks held: none
==7414==    at 0x4016E5: update_octree (octree.c:137)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x401821: update_octree (octree.c:161)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561f561 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561F562 by thread #1
==7414== Locks held: none
==7414==    at 0x401701: update_octree (octree.c:138)
==7414==    by 0x4017EF: update_octree (octree.c:158)
==7414==    by 0x401821: update_octree (octree.c:161)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561f562 is 2 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x56194D8 by thread #1
==7414== Locks held: none
==7414==    at 0x401892: update_octree (octree.c:169)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x401C33: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x56194d8 is 56 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402A91: read_input (octree.c:471)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561F650 by thread #1
==7414== Locks held: none
==7414==    at 0x4015D7: update_octree (octree.c:122)
==7414==    by 0x4018B7: update_octree (octree.c:170)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561f650 is 0 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561F658 by thread #1
==7414== Locks held: none
==7414==    at 0x401734: update_octree (octree.c:148)
==7414==    by 0x4018B7: update_octree (octree.c:170)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561f658 is 8 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561F6C0 by thread #1
==7414== Locks held: none
==7414==    at 0x401738: update_octree (octree.c:148)
==7414==    by 0x4018B7: update_octree (octree.c:170)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561f6c0 is 0 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C94: mk_neighbor (octree.c:234)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561F6C8 by thread #1
==7414== Locks held: none
==7414==    at 0x401766: update_octree (octree.c:151)
==7414==    by 0x4018B7: update_octree (octree.c:170)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561f6c8 is 120 bytes inside an unallocated block of size 752 in arena "client"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561F6D0 by thread #1
==7414== Locks held: none
==7414==    at 0x401798: update_octree (octree.c:154)
==7414==    by 0x4018B7: update_octree (octree.c:170)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561f6d0 is 128 bytes inside an unallocated block of size 752 in arena "client"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561F6D8 by thread #1
==7414== Locks held: none
==7414==    at 0x4017CA: update_octree (octree.c:157)
==7414==    by 0x4018B7: update_octree (octree.c:170)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561f6d8 is 136 bytes inside an unallocated block of size 752 in arena "client"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561F6E0 by thread #1
==7414== Locks held: none
==7414==    at 0x4017FC: update_octree (octree.c:160)
==7414==    by 0x4018B7: update_octree (octree.c:170)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561f6e0 is 144 bytes inside an unallocated block of size 752 in arena "client"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561F6E8 by thread #1
==7414== Locks held: none
==7414==    at 0x40182E: update_octree (octree.c:163)
==7414==    by 0x4018B7: update_octree (octree.c:170)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561f6e8 is 152 bytes inside an unallocated block of size 752 in arena "client"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561F6F0 by thread #1
==7414== Locks held: none
==7414==    at 0x401860: update_octree (octree.c:166)
==7414==    by 0x4018B7: update_octree (octree.c:170)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561f6f0 is 160 bytes inside an unallocated block of size 752 in arena "client"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561F6F8 by thread #1
==7414== Locks held: none
==7414==    at 0x401892: update_octree (octree.c:169)
==7414==    by 0x4018B7: update_octree (octree.c:170)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561f6f8 is 168 bytes inside an unallocated block of size 752 in arena "client"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561CB71 by thread #4
==7414== Locks held: none
==7414==    at 0x40226F: mk_neighborhood (octree.c:306)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #1
==7414== Locks held: none
==7414==    at 0x401699: update_octree (octree.c:131)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x401885: update_octree (octree.c:167)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561cb71 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402DBB: insert_in_octree (octree.c:523)
==7414==    by 0x40323D: insert_in_octree (octree.c:562)
==7414==    by 0x40323D: insert_in_octree (octree.c:562)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561DCD0 by thread #2
==7414== Locks held: none
==7414==    at 0x4021C0: mk_neighborhood (octree.c:291)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561dcd0 is 0 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x6A1A6A0 by thread #3
==7414== Locks held: none
==7414==    at 0x4E4AED6: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E48721: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #1
==7414== Locks held: none
==7414==    at 0x4E48E5B: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4E447D9: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414==  Address 0x6a1a6a0 is not stack'd, malloc'd or on a free list
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561EA51 by thread #1
==7414== Locks held: none
==7414==    at 0x401650: update_octree (octree.c:127)
==7414==    by 0x401853: update_octree (octree.c:164)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561ea51 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561FCF1 by thread #1
==7414== Locks held: none
==7414==    at 0x401650: update_octree (octree.c:127)
==7414==    by 0x401885: update_octree (octree.c:167)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561fcf1 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561FCF1 by thread #1
==7414== Locks held: none
==7414==    at 0x401699: update_octree (octree.c:131)
==7414==    by 0x401885: update_octree (octree.c:167)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561fcf1 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561B498 by thread #1
==7414== Locks held: none
==7414==    at 0x40160C: update_octree (octree.c:125)
==7414==    by 0x4018B7: update_octree (octree.c:170)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x401B1D: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561b498 is 56 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561EFD2 by thread #1
==7414== Locks held: none
==7414==    at 0x401630: update_octree (octree.c:126)
==7414==    by 0x4018B7: update_octree (octree.c:170)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561efd2 is 2 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561EFD1 by thread #1
==7414== Locks held: none
==7414==    at 0x4016B7: update_octree (octree.c:135)
==7414==    by 0x4018B7: update_octree (octree.c:170)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561efd1 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561DE61 by thread #1
==7414== Locks held: none
==7414==    at 0x401699: update_octree (octree.c:131)
==7414==    by 0x401821: update_octree (octree.c:161)
==7414==    by 0x4017BD: update_octree (octree.c:155)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561de61 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 8 at 0x561C040 by thread #3
==7414== Locks held: none
==7414==    at 0x401C33: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #1
==7414== Locks held: none
==7414==    at 0x40127A: delete_inner_node (octree.c:52)
==7414==    by 0x401365: delete_leaf_node (octree.c:66)
==7414==    by 0x40171C: update_octree (octree.c:141)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x401853: update_octree (octree.c:164)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561c040 is 0 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402EDA: insert_in_octree (octree.c:535)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561BFD1 by thread #3
==7414== Locks held: none
==7414==    at 0x401F57: mk_neighbor (octree.c:254)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #1
==7414== Locks held: none
==7414==    at 0x401290: delete_inner_node (octree.c:53)
==7414==    by 0x401365: delete_leaf_node (octree.c:66)
==7414==    by 0x40171C: update_octree (octree.c:141)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x401853: update_octree (octree.c:164)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561bfd1 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561BFD1 by thread #3
==7414== Locks held: none
==7414==    at 0x401F62: mk_neighbor (octree.c:254)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #1
==7414== Locks held: none
==7414==    at 0x401290: delete_inner_node (octree.c:53)
==7414==    by 0x401365: delete_leaf_node (octree.c:66)
==7414==    by 0x40171C: update_octree (octree.c:141)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x401853: update_octree (octree.c:164)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561bfd1 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561D920 by thread #4
==7414== Locks held: none
==7414==    at 0x4020C2: mk_neighborhood (octree.c:279)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561d920 is 0 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x401FF7: mk_neighbor (octree.c:261)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561D930 by thread #4
==7414== Locks held: none
==7414==    at 0x402156: mk_neighborhood (octree.c:290)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561d930 is 16 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x401FF7: mk_neighbor (octree.c:261)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 4 at 0x5619314 by thread #1
==7414== Locks held: none
==7414==    at 0x401330: delete_leaf_node (octree.c:64)
==7414==    by 0x40171C: update_octree (octree.c:141)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #3
==7414== Locks held: none
==7414==    at 0x401B93: mk_neighbor (octree.c:219)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x5619314 is 4 bytes inside a block of size 24 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4029B2: read_input (octree.c:456)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x5619314 by thread #1
==7414== Locks held: none
==7414==    at 0x40133A: delete_leaf_node (octree.c:64)
==7414==    by 0x40171C: update_octree (octree.c:141)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #3
==7414== Locks held: none
==7414==    at 0x401B93: mk_neighbor (octree.c:219)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x5619314 is 4 bytes inside a block of size 24 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4029B2: read_input (octree.c:456)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561F6F1 by thread #1
==7414== Locks held: none
==7414==    at 0x401699: update_octree (octree.c:131)
==7414==    by 0x401853: update_octree (octree.c:164)
==7414==    by 0x4017BD: update_octree (octree.c:155)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #2
==7414== Locks held: none
==7414==    at 0x401BDD: mk_neighbor (octree.c:223)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561f6f1 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #4
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561C040 by thread #1
==7414== Locks held: none
==7414==    at 0x401738: update_octree (octree.c:148)
==7414==    by 0x401853: update_octree (octree.c:164)
==7414==    by 0x400C7F: main (project.c:55)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x401C33: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561c040 is 0 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402EDA: insert_in_octree (octree.c:535)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561D938 by thread #1
==7414== Locks held: none
==7414==    at 0x40134D: delete_leaf_node (octree.c:66)
==7414==    by 0x40167B: update_octree (octree.c:129)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x4018B7: update_octree (octree.c:170)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561d938 is 24 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x401FF7: mk_neighbor (octree.c:261)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561D940 by thread #1
==7414== Locks held: none
==7414==    at 0x401358: delete_leaf_node (octree.c:66)
==7414==    by 0x40167B: update_octree (octree.c:129)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x4018B7: update_octree (octree.c:170)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561d940 is 32 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x401FF7: mk_neighbor (octree.c:261)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561FE31 by thread #1
==7414== Locks held: none
==7414==    at 0x4016E5: update_octree (octree.c:137)
==7414==    by 0x4018B7: update_octree (octree.c:170)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561fe31 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561FE32 by thread #1
==7414== Locks held: none
==7414==    at 0x401701: update_octree (octree.c:138)
==7414==    by 0x4018B7: update_octree (octree.c:170)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561fe32 is 2 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561FE31 by thread #1
==7414== Locks held: none
==7414==    at 0x401650: update_octree (octree.c:127)
==7414==    by 0x4018B7: update_octree (octree.c:170)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561fe31 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561FE31 by thread #1
==7414== Locks held: none
==7414==    at 0x401699: update_octree (octree.c:131)
==7414==    by 0x4018B7: update_octree (octree.c:170)
==7414==    by 0x401759: update_octree (octree.c:149)
==7414==    by 0x400C7F: main (project.c:55)
==7414==  Address 0x561fe31 is 1 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 4 at 0x5619314 by thread #1
==7414== Locks held: none
==7414==    at 0x401B89: mk_neighbor (octree.c:219)
==7414==    by 0x401FF7: mk_neighbor (octree.c:261)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #3
==7414== Locks held: none
==7414==    at 0x401B93: mk_neighbor (octree.c:219)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x5619314 is 4 bytes inside a block of size 24 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4029B2: read_input (octree.c:456)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x5619314 by thread #1
==7414== Locks held: none
==7414==    at 0x401B93: mk_neighbor (octree.c:219)
==7414==    by 0x401FF7: mk_neighbor (octree.c:261)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E447DE: GOMP_parallel (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x400C5E: main (project.c:42)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #3
==7414== Locks held: none
==7414==    at 0x401B93: mk_neighbor (octree.c:219)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x5619314 is 4 bytes inside a block of size 24 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4029B2: read_input (octree.c:456)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0xFFF000140 by thread #1
==7414== Locks held: none
==7414==    at 0x402698: get_leaf_nodes_locations (octree.c:395)
==7414==    by 0x400CEA: main (project.c:63)
==7414== 
==7414== This conflicts with a previous read of size 2 by thread #3
==7414== Locks held: none
==7414==    at 0x4C33400: memcpy@@GLIBC_2.14 (vg_replace_strmem.c:915)
==7414==    by 0x400EEA: main._omp_fn.0 (project.c:42)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0xfff000140 is on thread #1's stack
==7414==  in frame #1, created by main (project.c:15)
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0xFFF000141 by thread #1
==7414== Locks held: none
==7414==    at 0x402698: get_leaf_nodes_locations (octree.c:395)
==7414==    by 0x4027F4: get_leaf_nodes_locations (octree.c:414)
==7414==    by 0x400CEA: main (project.c:63)
==7414== 
==7414== This conflicts with a previous read of size 2 by thread #3
==7414== Locks held: none
==7414==    at 0x4C33400: memcpy@@GLIBC_2.14 (vg_replace_strmem.c:915)
==7414==    by 0x400EEA: main._omp_fn.0 (project.c:42)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0xfff000141 is on thread #1's stack
==7414==  in frame #2, created by main (project.c:15)
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0xFFF000143 by thread #1
==7414== Locks held: none
==7414==    at 0x40270B: get_leaf_nodes_locations (octree.c:400)
==7414==    by 0x4027F4: get_leaf_nodes_locations (octree.c:414)
==7414==    by 0x4027F4: get_leaf_nodes_locations (octree.c:414)
==7414==    by 0x400CEA: main (project.c:63)
==7414== 
==7414== This conflicts with a previous read of size 2 by thread #3
==7414== Locks held: none
==7414==    at 0x4C33400: memcpy@@GLIBC_2.14 (vg_replace_strmem.c:915)
==7414==    by 0x400EEA: main._omp_fn.0 (project.c:42)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0xfff000143 is on thread #1's stack
==7414==  in frame #3, created by main (project.c:15)
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x603B64 by thread #1
==7414== Locks held: none
==7414==    at 0x40247D: coordinates_from_location (octree.c:353)
==7414==    by 0x40271D: get_leaf_nodes_locations (octree.c:401)
==7414==    by 0x4027F4: get_leaf_nodes_locations (octree.c:414)
==7414==    by 0x4027F4: get_leaf_nodes_locations (octree.c:414)
==7414==    by 0x400CEA: main (project.c:63)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #3
==7414== Locks held: none
==7414==    at 0x40247D: coordinates_from_location (octree.c:353)
==7414==    by 0x4021D5: mk_neighborhood (octree.c:292)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x603b64 is 0 bytes inside data symbol "coordinates.3174"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x603B68 by thread #1
==7414== Locks held: none
==7414==    at 0x402487: coordinates_from_location (octree.c:354)
==7414==    by 0x40271D: get_leaf_nodes_locations (octree.c:401)
==7414==    by 0x4027F4: get_leaf_nodes_locations (octree.c:414)
==7414==    by 0x4027F4: get_leaf_nodes_locations (octree.c:414)
==7414==    by 0x400CEA: main (project.c:63)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #3
==7414== Locks held: none
==7414==    at 0x402487: coordinates_from_location (octree.c:354)
==7414==    by 0x4021D5: mk_neighborhood (octree.c:292)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x603b68 is 4 bytes inside data symbol "coordinates.3174"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 4 at 0x603B6C by thread #1
==7414== Locks held: none
==7414==    at 0x402491: coordinates_from_location (octree.c:355)
==7414==    by 0x40271D: get_leaf_nodes_locations (octree.c:401)
==7414==    by 0x4027F4: get_leaf_nodes_locations (octree.c:414)
==7414==    by 0x4027F4: get_leaf_nodes_locations (octree.c:414)
==7414==    by 0x400CEA: main (project.c:63)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #3
==7414== Locks held: none
==7414==    at 0x402491: coordinates_from_location (octree.c:355)
==7414==    by 0x4021D5: mk_neighborhood (octree.c:292)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x603b6c is 8 bytes inside data symbol "coordinates.3174"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561ED50 by thread #1
==7414== Locks held: none
==7414==    at 0x402708: get_leaf_nodes_locations (octree.c:400)
==7414==    by 0x40282A: get_leaf_nodes_locations (octree.c:417)
==7414==    by 0x4027F4: get_leaf_nodes_locations (octree.c:414)
==7414==    by 0x400CEA: main (project.c:63)
==7414==  Address 0x561ed50 is 0 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561E090 by thread #1
==7414== Locks held: none
==7414==    at 0x402708: get_leaf_nodes_locations (octree.c:400)
==7414==    by 0x402860: get_leaf_nodes_locations (octree.c:420)
==7414==    by 0x4027F4: get_leaf_nodes_locations (octree.c:414)
==7414==    by 0x400CEA: main (project.c:63)
==7414==  Address 0x561e090 is 0 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561AAC0 by thread #1
==7414== Locks held: none
==7414==    at 0x402708: get_leaf_nodes_locations (octree.c:400)
==7414==    by 0x402896: get_leaf_nodes_locations (octree.c:423)
==7414==    by 0x4027F4: get_leaf_nodes_locations (octree.c:414)
==7414==    by 0x400CEA: main (project.c:63)
==7414==  Address 0x561aac0 is 0 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561AE60 by thread #1
==7414== Locks held: none
==7414==    at 0x4026D3: get_leaf_nodes_locations (octree.c:399)
==7414==    by 0x4028CC: get_leaf_nodes_locations (octree.c:426)
==7414==    by 0x4027F4: get_leaf_nodes_locations (octree.c:414)
==7414==    by 0x400CEA: main (project.c:63)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x401B1D: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561ae60 is 48 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561EF80 by thread #1
==7414== Locks held: none
==7414==    at 0x402708: get_leaf_nodes_locations (octree.c:400)
==7414==    by 0x402902: get_leaf_nodes_locations (octree.c:429)
==7414==    by 0x4027F4: get_leaf_nodes_locations (octree.c:414)
==7414==    by 0x400CEA: main (project.c:63)
==7414==  Address 0x561ef80 is 0 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561B2C0 by thread #1
==7414== Locks held: none
==7414==    at 0x4026D3: get_leaf_nodes_locations (octree.c:399)
==7414==    by 0x402938: get_leaf_nodes_locations (octree.c:432)
==7414==    by 0x4027F4: get_leaf_nodes_locations (octree.c:414)
==7414==    by 0x400CEA: main (project.c:63)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x401B1D: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561b2c0 is 32 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561C720 by thread #1
==7414== Locks held: none
==7414==    at 0x402708: get_leaf_nodes_locations (octree.c:400)
==7414==    by 0x402938: get_leaf_nodes_locations (octree.c:432)
==7414==    by 0x4027F4: get_leaf_nodes_locations (octree.c:414)
==7414==    by 0x400CEA: main (project.c:63)
==7414==  Address 0x561c720 is 0 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561FE30 by thread #1
==7414== Locks held: none
==7414==    at 0x402708: get_leaf_nodes_locations (octree.c:400)
==7414==    by 0x40296E: get_leaf_nodes_locations (octree.c:435)
==7414==    by 0x4027F4: get_leaf_nodes_locations (octree.c:414)
==7414==    by 0x400CEA: main (project.c:63)
==7414==  Address 0x561fe30 is 0 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561F6A0 by thread #1
==7414== Locks held: none
==7414==    at 0x402708: get_leaf_nodes_locations (octree.c:400)
==7414==    by 0x4028CC: get_leaf_nodes_locations (octree.c:426)
==7414==    by 0x40282A: get_leaf_nodes_locations (octree.c:417)
==7414==    by 0x400CEA: main (project.c:63)
==7414==  Address 0x561f6a0 is 0 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561F3B8 by thread #1
==7414== Locks held: none
==7414==    at 0x402694: get_leaf_nodes_locations (octree.c:395)
==7414==    by 0x402938: get_leaf_nodes_locations (octree.c:432)
==7414==    by 0x40282A: get_leaf_nodes_locations (octree.c:417)
==7414==    by 0x400CEA: main (project.c:63)
==7414==  Address 0x561f3b8 is 24 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561DE10 by thread #1
==7414== Locks held: none
==7414==    at 0x402708: get_leaf_nodes_locations (octree.c:400)
==7414==    by 0x4027F4: get_leaf_nodes_locations (octree.c:414)
==7414==    by 0x402860: get_leaf_nodes_locations (octree.c:420)
==7414==    by 0x400CEA: main (project.c:63)
==7414==  Address 0x561de10 is 0 bytes inside a block of size 3 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401B1C: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561A7E8 by thread #1
==7414== Locks held: none
==7414==    at 0x4026D3: get_leaf_nodes_locations (octree.c:399)
==7414==    by 0x40282A: get_leaf_nodes_locations (octree.c:417)
==7414==    by 0x402860: get_leaf_nodes_locations (octree.c:420)
==7414==    by 0x400CEA: main (project.c:63)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x401B1D: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561a7e8 is 8 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561EBA8 by thread #1
==7414== Locks held: none
==7414==    at 0x402694: get_leaf_nodes_locations (octree.c:395)
==7414==    by 0x402902: get_leaf_nodes_locations (octree.c:429)
==7414==    by 0x402860: get_leaf_nodes_locations (octree.c:420)
==7414==    by 0x400CEA: main (project.c:63)
==7414==  Address 0x561eba8 is 24 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561C158 by thread #1
==7414== Locks held: none
==7414==    at 0x402694: get_leaf_nodes_locations (octree.c:395)
==7414==    by 0x40296E: get_leaf_nodes_locations (octree.c:435)
==7414==    by 0x400CEA: main (project.c:63)
==7414==  Address 0x561c158 is 24 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561B0D8 by thread #1
==7414== Locks held: none
==7414==    at 0x402694: get_leaf_nodes_locations (octree.c:395)
==7414==    by 0x4027F4: get_leaf_nodes_locations (octree.c:414)
==7414==    by 0x40296E: get_leaf_nodes_locations (octree.c:435)
==7414==    by 0x400CEA: main (project.c:63)
==7414==  Address 0x561b0d8 is 24 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x401FF7: mk_neighbor (octree.c:261)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 4 at 0x5619314 by thread #1
==7414== Locks held: none
==7414==    at 0x400DCD: main (project.c:69)
==7414== 
==7414== This conflicts with a previous write of size 4 by thread #3
==7414== Locks held: none
==7414==    at 0x401B93: mk_neighbor (octree.c:219)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x5619314 is 4 bytes inside a block of size 24 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x4029B2: read_input (octree.c:456)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x5619711 by thread #1
==7414== Locks held: none
==7414==    at 0x4013E4: free_octree (octree.c:78)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #3
==7414== Locks held: none
==7414==    at 0x401B82: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x5619711 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x40323D: insert_in_octree (octree.c:562)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x5619711 by thread #1
==7414== Locks held: none
==7414==    at 0x4013EF: free_octree (octree.c:78)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #3
==7414== Locks held: none
==7414==    at 0x401B82: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x5619711 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x40323D: insert_in_octree (octree.c:562)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x5619810 by thread #1
==7414== Locks held: none
==7414==    at 0x4013B8: free_octree (octree.c:76)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x401B1D: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x5619810 is 16 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x40323D: insert_in_octree (octree.c:562)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 8 at 0x5619610 by thread #1
==7414== Locks held: none
==7414==    at 0x40127A: delete_inner_node (octree.c:52)
==7414==    by 0x401424: free_octree (octree.c:84)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous read of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x401C08: mk_neighbor (octree.c:230)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x5619610 is 0 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402EDA: insert_in_octree (octree.c:535)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x56199C0 by thread #1
==7414== Locks held: none
==7414==    at 0x4013B8: free_octree (octree.c:76)
==7414==    by 0x40148A: free_octree (octree.c:92)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x401B1D: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x56199c0 is 0 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x56198D1 by thread #1
==7414== Locks held: none
==7414==    at 0x4013E4: free_octree (octree.c:78)
==7414==    by 0x40148A: free_octree (octree.c:92)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #2
==7414== Locks held: none
==7414==    at 0x401B82: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x56198d1 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x56198D1 by thread #1
==7414== Locks held: none
==7414==    at 0x4013EF: free_octree (octree.c:78)
==7414==    by 0x40148A: free_octree (octree.c:92)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #2
==7414== Locks held: none
==7414==    at 0x401B82: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x56198d1 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x5619C78 by thread #1
==7414== Locks held: none
==7414==    at 0x4013B8: free_octree (octree.c:76)
==7414==    by 0x4014BC: free_octree (octree.c:95)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x401B1D: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x5619c78 is 8 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x5619B81 by thread #1
==7414== Locks held: none
==7414==    at 0x4013E4: free_octree (octree.c:78)
==7414==    by 0x4014BC: free_octree (octree.c:95)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #3
==7414== Locks held: none
==7414==    at 0x401B82: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x5619b81 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x5619B81 by thread #1
==7414== Locks held: none
==7414==    at 0x4013EF: free_octree (octree.c:78)
==7414==    by 0x4014BC: free_octree (octree.c:95)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #3
==7414== Locks held: none
==7414==    at 0x401B82: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x5619b81 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x5619E80 by thread #1
==7414== Locks held: none
==7414==    at 0x4013B8: free_octree (octree.c:76)
==7414==    by 0x4014EE: free_octree (octree.c:98)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x401B1D: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x5619e80 is 0 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x5619D91 by thread #1
==7414== Locks held: none
==7414==    at 0x4013E4: free_octree (octree.c:78)
==7414==    by 0x4014EE: free_octree (octree.c:98)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #3
==7414== Locks held: none
==7414==    at 0x401B82: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x5619d91 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x5619D91 by thread #1
==7414== Locks held: none
==7414==    at 0x4013EF: free_octree (octree.c:78)
==7414==    by 0x4014EE: free_octree (octree.c:98)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #3
==7414== Locks held: none
==7414==    at 0x401B82: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x5619d91 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561AD41 by thread #1
==7414== Locks held: none
==7414==    at 0x4013E4: free_octree (octree.c:78)
==7414==    by 0x401520: free_octree (octree.c:101)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #2
==7414== Locks held: none
==7414==    at 0x401B82: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561ad41 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561AD41 by thread #1
==7414== Locks held: none
==7414==    at 0x4013EF: free_octree (octree.c:78)
==7414==    by 0x401520: free_octree (octree.c:101)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #2
==7414== Locks held: none
==7414==    at 0x401B82: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561ad41 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561AE50 by thread #1
==7414== Locks held: none
==7414==    at 0x4013B8: free_octree (octree.c:76)
==7414==    by 0x401520: free_octree (octree.c:101)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x401B1D: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561ae50 is 32 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561AF51 by thread #1
==7414== Locks held: none
==7414==    at 0x4013E4: free_octree (octree.c:78)
==7414==    by 0x401552: free_octree (octree.c:104)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #2
==7414== Locks held: none
==7414==    at 0x401B82: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561af51 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561AF51 by thread #1
==7414== Locks held: none
==7414==    at 0x4013EF: free_octree (octree.c:78)
==7414==    by 0x401552: free_octree (octree.c:104)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #2
==7414== Locks held: none
==7414==    at 0x401B82: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561af51 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561B060 by thread #1
==7414== Locks held: none
==7414==    at 0x4013B8: free_octree (octree.c:76)
==7414==    by 0x401552: free_octree (octree.c:104)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x401B1D: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561b060 is 32 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561B1B1 by thread #1
==7414== Locks held: none
==7414==    at 0x4013E4: free_octree (octree.c:78)
==7414==    by 0x401584: free_octree (octree.c:107)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #2
==7414== Locks held: none
==7414==    at 0x401B82: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561b1b1 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561B1B1 by thread #1
==7414== Locks held: none
==7414==    at 0x4013EF: free_octree (octree.c:78)
==7414==    by 0x401584: free_octree (octree.c:107)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #2
==7414== Locks held: none
==7414==    at 0x401B82: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561b1b1 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561B2B0 by thread #1
==7414== Locks held: none
==7414==    at 0x4013B8: free_octree (octree.c:76)
==7414==    by 0x401584: free_octree (octree.c:107)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x401B1D: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561b2b0 is 16 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561B371 by thread #1
==7414== Locks held: none
==7414==    at 0x4013E4: free_octree (octree.c:78)
==7414==    by 0x4015B6: free_octree (octree.c:110)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #2
==7414== Locks held: none
==7414==    at 0x401B82: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561b371 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x561B371 by thread #1
==7414== Locks held: none
==7414==    at 0x4013EF: free_octree (octree.c:78)
==7414==    by 0x4015B6: free_octree (octree.c:110)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #2
==7414== Locks held: none
==7414==    at 0x401B82: mk_neighbor (octree.c:218)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561b371 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561B478 by thread #1
==7414== Locks held: none
==7414==    at 0x4013B8: free_octree (octree.c:76)
==7414==    by 0x4015B6: free_octree (octree.c:110)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x401B1D: mk_neighbor (octree.c:214)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561b478 is 24 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x40302B: insert_in_octree (octree.c:544)
==7414==    by 0x4032D5: insert_in_octree (octree.c:570)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x5619FA1 by thread #1
==7414== Locks held: none
==7414==    at 0x401285: delete_inner_node (octree.c:53)
==7414==    by 0x401424: free_octree (octree.c:84)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x40148A: free_octree (octree.c:92)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #3
==7414== Locks held: none
==7414==    at 0x401F62: mk_neighbor (octree.c:254)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x5619fa1 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during write of size 1 at 0x5619FA1 by thread #1
==7414== Locks held: none
==7414==    at 0x401290: delete_inner_node (octree.c:53)
==7414==    by 0x401424: free_octree (octree.c:84)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x40148A: free_octree (octree.c:92)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #3
==7414== Locks held: none
==7414==    at 0x401F62: mk_neighbor (octree.c:254)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x5619fa1 is 1 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402E78: insert_in_octree (octree.c:532)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561A040 by thread #1
==7414== Locks held: none
==7414==    at 0x40155F: free_octree (octree.c:106)
==7414==    by 0x40148A: free_octree (octree.c:92)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x401C33: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561a040 is 48 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402EDA: insert_in_octree (octree.c:535)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561F3A0 by thread #1
==7414== Locks held: none
==7414==    at 0x401386: free_octree (octree.c:73)
==7414==    by 0x401584: free_octree (octree.c:107)
==7414==    by 0x40148A: free_octree (octree.c:92)
==7414==    by 0x400E0F: main (project.c:78)
==7414==  Address 0x561f3a0 is 0 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561F3B0 by thread #1
==7414== Locks held: none
==7414==    at 0x4013A7: free_octree (octree.c:76)
==7414==    by 0x401584: free_octree (octree.c:107)
==7414==    by 0x40148A: free_octree (octree.c:92)
==7414==    by 0x400E0F: main (project.c:78)
==7414==  Address 0x561f3b0 is 16 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561F3B8 by thread #1
==7414== Locks held: none
==7414==    at 0x40140C: free_octree (octree.c:84)
==7414==    by 0x401584: free_octree (octree.c:107)
==7414==    by 0x40148A: free_octree (octree.c:92)
==7414==    by 0x400E0F: main (project.c:78)
==7414==  Address 0x561f3b8 is 24 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561F3C0 by thread #1
==7414== Locks held: none
==7414==    at 0x401417: free_octree (octree.c:84)
==7414==    by 0x401584: free_octree (octree.c:107)
==7414==    by 0x40148A: free_octree (octree.c:92)
==7414==    by 0x400E0F: main (project.c:78)
==7414==  Address 0x561f3c0 is 32 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561F3A8 by thread #1
==7414== Locks held: none
==7414==    at 0x401218: delete_inner_node (octree.c:49)
==7414==    by 0x401424: free_octree (octree.c:84)
==7414==    by 0x401584: free_octree (octree.c:107)
==7414==    by 0x40148A: free_octree (octree.c:92)
==7414==    by 0x400E0F: main (project.c:78)
==7414==  Address 0x561f3a8 is 8 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561A458 by thread #1
==7414== Locks held: none
==7414==    at 0x40152D: free_octree (octree.c:103)
==7414==    by 0x4014BC: free_octree (octree.c:95)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x401C33: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561a458 is 40 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402EDA: insert_in_octree (octree.c:535)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561EB90 by thread #1
==7414== Locks held: none
==7414==    at 0x401386: free_octree (octree.c:73)
==7414==    by 0x401552: free_octree (octree.c:104)
==7414==    by 0x4014BC: free_octree (octree.c:95)
==7414==    by 0x400E0F: main (project.c:78)
==7414==  Address 0x561eb90 is 0 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561EBA0 by thread #1
==7414== Locks held: none
==7414==    at 0x4013A7: free_octree (octree.c:76)
==7414==    by 0x401552: free_octree (octree.c:104)
==7414==    by 0x4014BC: free_octree (octree.c:95)
==7414==    by 0x400E0F: main (project.c:78)
==7414==  Address 0x561eba0 is 16 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561EBA8 by thread #1
==7414== Locks held: none
==7414==    at 0x40140C: free_octree (octree.c:84)
==7414==    by 0x401552: free_octree (octree.c:104)
==7414==    by 0x4014BC: free_octree (octree.c:95)
==7414==    by 0x400E0F: main (project.c:78)
==7414==  Address 0x561eba8 is 24 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561EBB0 by thread #1
==7414== Locks held: none
==7414==    at 0x401417: free_octree (octree.c:84)
==7414==    by 0x401552: free_octree (octree.c:104)
==7414==    by 0x4014BC: free_octree (octree.c:95)
==7414==    by 0x400E0F: main (project.c:78)
==7414==  Address 0x561ebb0 is 32 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #2
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x56194B8 by thread #1
==7414== Locks held: none
==7414==    at 0x4014C9: free_octree (octree.c:97)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #2
==7414== Locks held: none
==7414==    at 0x401C33: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x56194b8 is 24 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402A91: read_input (octree.c:471)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561C040 by thread #1
==7414== Locks held: none
==7414==    at 0x401437: free_octree (octree.c:88)
==7414==    by 0x401552: free_octree (octree.c:104)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x401C33: mk_neighbor (octree.c:231)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x561c040 is 0 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402EDA: insert_in_octree (octree.c:535)
==7414==    by 0x402CA3: read_input (octree.c:501)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x56194D8 by thread #1
==7414== Locks held: none
==7414==    at 0x401591: free_octree (octree.c:109)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 8 by thread #3
==7414== Locks held: none
==7414==    at 0x401C33: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Address 0x56194d8 is 56 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x402A91: read_input (octree.c:471)
==7414==    by 0x400B78: main (project.c:30)
==7414==  Block was alloc'd by thread #1
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561C140 by thread #1
==7414== Locks held: none
==7414==    at 0x401386: free_octree (octree.c:73)
==7414==    by 0x4015B6: free_octree (octree.c:110)
==7414==    by 0x400E0F: main (project.c:78)
==7414==  Address 0x561c140 is 0 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561C148 by thread #1
==7414== Locks held: none
==7414==    at 0x401433: free_octree (octree.c:88)
==7414==    by 0x4015B6: free_octree (octree.c:110)
==7414==    by 0x400E0F: main (project.c:78)
==7414==  Address 0x561c148 is 8 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561DD70 by thread #1
==7414== Locks held: none
==7414==    at 0x401437: free_octree (octree.c:88)
==7414==    by 0x4015B6: free_octree (octree.c:110)
==7414==    by 0x400E0F: main (project.c:78)
==7414== 
==7414== This conflicts with a previous write of size 1 by thread #3
==7414== Locks held: none
==7414==    at 0x401BDD: mk_neighbor (octree.c:223)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x40208F: mk_neighbor (octree.c:269)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==  Address 0x561dd70 is 0 bytes inside a block of size 64 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C94: mk_neighbor (octree.c:234)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561B0C0 by thread #1
==7414== Locks held: none
==7414==    at 0x401386: free_octree (octree.c:73)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x4015B6: free_octree (octree.c:110)
==7414==    by 0x400E0F: main (project.c:78)
==7414==  Address 0x561b0c0 is 0 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x401FF7: mk_neighbor (octree.c:261)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561B0D0 by thread #1
==7414== Locks held: none
==7414==    at 0x4013A7: free_octree (octree.c:76)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x4015B6: free_octree (octree.c:110)
==7414==    by 0x400E0F: main (project.c:78)
==7414==  Address 0x561b0d0 is 16 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x401FF7: mk_neighbor (octree.c:261)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561B0D8 by thread #1
==7414== Locks held: none
==7414==    at 0x40140C: free_octree (octree.c:84)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x4015B6: free_octree (octree.c:110)
==7414==    by 0x400E0F: main (project.c:78)
==7414==  Address 0x561b0d8 is 24 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x401FF7: mk_neighbor (octree.c:261)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561B0E0 by thread #1
==7414== Locks held: none
==7414==    at 0x401417: free_octree (octree.c:84)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x4015B6: free_octree (octree.c:110)
==7414==    by 0x400E0F: main (project.c:78)
==7414==  Address 0x561b0e0 is 32 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x401FF7: mk_neighbor (octree.c:261)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561C160 by thread #1
==7414== Locks held: none
==7414==    at 0x4012A3: delete_inner_node (octree.c:54)
==7414==    by 0x401424: free_octree (octree.c:84)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x4015B6: free_octree (octree.c:110)
==7414==    by 0x400E0F: main (project.c:78)
==7414==  Address 0x561c160 is 32 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 1 at 0x561C158 by thread #1
==7414== Locks held: none
==7414==    at 0x4012B0: delete_inner_node (octree.c:55)
==7414==    by 0x401424: free_octree (octree.c:84)
==7414==    by 0x401458: free_octree (octree.c:89)
==7414==    by 0x4015B6: free_octree (octree.c:110)
==7414==    by 0x400E0F: main (project.c:78)
==7414==  Address 0x561c158 is 24 bytes inside a block of size 40 alloc'd
==7414==    at 0x4C2A040: malloc (vg_replace_malloc.c:296)
==7414==    by 0x401C32: mk_neighbor (octree.c:231)
==7414==    by 0x402246: mk_neighborhood (octree.c:303)
==7414==    by 0x400FF0: main._omp_fn.0 (project.c:50)
==7414==    by 0x4E48715: ??? (in /usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0)
==7414==    by 0x4C2F056: mythread_wrapper (hg_intercepts.c:234)
==7414==    by 0x5059063: start_thread (pthread_create.c:309)
==7414==    by 0x535662C: clone (clone.S:111)
==7414==  Block was alloc'd by thread #3
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561DD78 by thread #1
==7414== Locks held: none
==7414==    at 0x401465: free_octree (octree.c:91)
==7414==    by 0x4015B6: free_octree (octree.c:110)
==7414==    by 0x400E0F: main (project.c:78)
==7414==  Address 0x561dd78 is 1,240 bytes inside an unallocated block of size 2,320 in arena "client"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561DD80 by thread #1
==7414== Locks held: none
==7414==    at 0x401497: free_octree (octree.c:94)
==7414==    by 0x4015B6: free_octree (octree.c:110)
==7414==    by 0x400E0F: main (project.c:78)
==7414==  Address 0x561dd80 is 1,248 bytes inside an unallocated block of size 2,320 in arena "client"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561DD88 by thread #1
==7414== Locks held: none
==7414==    at 0x4014C9: free_octree (octree.c:97)
==7414==    by 0x4015B6: free_octree (octree.c:110)
==7414==    by 0x400E0F: main (project.c:78)
==7414==  Address 0x561dd88 is 1,256 bytes inside an unallocated block of size 2,320 in arena "client"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561DD90 by thread #1
==7414== Locks held: none
==7414==    at 0x4014FB: free_octree (octree.c:100)
==7414==    by 0x4015B6: free_octree (octree.c:110)
==7414==    by 0x400E0F: main (project.c:78)
==7414==  Address 0x561dd90 is 1,264 bytes inside an unallocated block of size 2,320 in arena "client"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561DD98 by thread #1
==7414== Locks held: none
==7414==    at 0x40152D: free_octree (octree.c:103)
==7414==    by 0x4015B6: free_octree (octree.c:110)
==7414==    by 0x400E0F: main (project.c:78)
==7414==  Address 0x561dd98 is 1,272 bytes inside an unallocated block of size 2,320 in arena "client"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561DDA0 by thread #1
==7414== Locks held: none
==7414==    at 0x40155F: free_octree (octree.c:106)
==7414==    by 0x4015B6: free_octree (octree.c:110)
==7414==    by 0x400E0F: main (project.c:78)
==7414==  Address 0x561dda0 is 1,280 bytes inside an unallocated block of size 2,320 in arena "client"
==7414== 
==7414== ----------------------------------------------------------------
==7414== 
==7414== Possible data race during read of size 8 at 0x561DDA8 by thread #1
==7414== Locks held: none
==7414==    at 0x401591: free_octree (octree.c:109)
==7414==    by 0x4015B6: free_octree (octree.c:110)
==7414==    by 0x400E0F: main (project.c:78)
==7414==  Address 0x561dda8 is 1,288 bytes inside an unallocated block of size 2,320 in arena "client"
==7414== 
max depth: 4
1    leafs: 75
2    leafs: 73
3    leafs: 67
4    leafs: 75
5    leafs: 74
6    leafs: 69
7    leafs: 77
8    leafs: 73
9    leafs: 75
10    leafs: 73
==7414== 
==7414== For counts of detected and suppressed errors, rerun with: -v
==7414== Use --history-level=approx or =none to gain increased speed, at
==7414== the cost of reduced accuracy of conflicting-access information
==7414== ERROR SUMMARY: 22573 errors from 290 contexts (suppressed: 6 from 6)
